@page
@using BattleShipBrain
@using WebApplication1.WebLogic
@model WebApplication1.Pages.Game.Ships

@{
    ViewData["Title"] = "Ships";
}

<div class="d-flex justify-content-center">
    <div class="text-center">
        <h2 class="display-10">@Model.PlayerSideToOutput, Click where you want to put a ship!</h2>
    </div>
</div>
<div class="d-flex justify-content-center">
    <div class="d-flex flex-row bd-highlight">
        <div class="p-3 bd-highlight row-cols-lg-auto">
            <div class="text-center">
                <h5 class="display-10">Your Board with Ships!</h5>
            </div>
            <div class="">
                <table>
                    <tr>
                        <td class="table-td" onclick="" bgcolor="white" style="height: 32px; width: 32px; border: 2px solid #000;">
                        </td>
                        @for (int y = 0; y < Model.Brain!.GetBoard(0).GetLength(1); y++)
                        {
                            <td class="table-td" onclick="" bgcolor="white" style="height: 32px; width: 32px; border: 2px solid #000; text-align: center; vertical-align: middle">
                                <strong>@(y + 1)</strong>
                            </td>
                        }
                    </tr>
                    @if (Model.PlayerSide!.Equals("playerSideA"))
                    {
                        for (int y = 0; y < Model.Brain!.GetBoard(0).GetLength(1); y++)
                        {
                            <tr>
                                <td class="table-td" onclick="" bgcolor="white" style="height: 32px; width: 32px; border: 2px solid #000;text-align: center; vertical-align: middle">
                                    <strong>@(y + 1)</strong>
                                </td>
                                @for (int x = 0; x < Model.Brain.GetBoard(0).GetLength(0); x++)
                                {
                                    if (Model.Brain.GetBoard(0)[x, y].ToString().Equals("|-E-|"))
                                    {
                                        <td class="table-td" onclick="window.location.href='?moveType=ship&x=@(x)&y=@(y)'" bgcolor="#00bfff" style="height: 32px; width: 32px; border: 2px solid #000;">
                                        </td>
                                    }
                                    else if (Model.Brain.GetBoard(0)[x, y].ToString().Equals("|-S-|"))
                                    {
                                        <td class="table-td" onclick="" bgcolor="#000000" style="height: 32px; width: 32px; border: 2px solid #000;">
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    }
                    else if (Model.PlayerSide!.Equals("playerSideB"))
                    {
                        for (int y = 0; y < Model.Brain!.GetBoard(2).GetLength(1); y++)
                        {
                            <tr>
                                @for (int x = 0; x < Model.Brain.GetBoard(2).GetLength(0); x++)
                                {
                                    if (Model.Brain.GetBoard(2)[x, y].ToString().Equals("|-E-|"))
                                    {
                                        <td class="table-td" onclick="window.location.href='?moveType=ship&x=@(x)&y=@(y)'" bgcolor="#00bfff" style="height: 32px; width: 32px; border: 2px solid #000;">
                                        </td>
                                    }
                                    else if (Model.Brain.GetBoard(2)[x, y].ToString().Equals("|-S-|"))
                                    {
                                        <td class="table-td" onclick="" bgcolor="#000000" style="height: 32px; width: 32px; border: 2px solid #000;">
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    }
                </table>
            </div>
            <div class="d-flex justify-content-center">
                <div class="d-flex flex-row bd-highlight mb-3">
                    <div class="p-2 bd-highlight">
                        <span>
                            <div class="d-flex justify-content-center">Empty</div>
                            <div class="d-flex justify-content-center">
                                <table>
                                    <tr>
                                        <td class="table-td" onclick="" bgcolor="#00bfff" style="height: 32px; width: 32px; border: 2px solid #000;">
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </span>
                    </div>
                    <div class="p-2 bd-highlight">
                        <span>
                            <div class="d-flex justify-content-center">Ship</div>
                            <div class="d-flex justify-content-center">
                                <table>
                                    <tr>
                                        <td class="table-td" onclick="" bgcolor="#000000" style="height: 32px; width: 32px; border: 2px solid #000;">
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="p-3 bd-highlight row-cols-lg-auto">
            <div class="text-center">
                <h5 class="display-10">Your Ships!</h5>
            </div>
            <div>
                @if (Model.Brain!.GetGameConfig()!.ShipConfigs.Count > 0)
                {
                    if (!Model.Brain!.CheckPlayerPlacedShips(Model.PlayerSideCheck))
                    {
                        foreach (ShipConfig shipConfig in Model.Brain!.GetGameConfig()!.ShipConfigs)
                        {
                            <div class="form-floating">
                                <input class="form-control" id="textForConfigShipConfig" name="textForConfigShipConfig" placeholder="@shipConfig.Name" value="Q: @shipConfig.Quantity, X: @shipConfig.ShipSizeX, Y: @shipConfig.ShipSizeY" disabled readonly/>
                                @if (Model.CheckIfShipWithNameIsUsed(shipConfig.Name))
                                {
                                    <label for="textForConfigShipConfig">@shipConfig.Name - All Placed!</label>
                                }
                                else
                                {
                                    <label for="textForConfigShipConfig">@shipConfig.Name</label>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center">
                            <h6 class="display-10">You do not have available ships to place!</h6>
                        </div>
                    }
                }
            </div>
        </div>
        @{
            var tempSideEnum = EPlayer.NotDefined;
            if (Model.PlayerSide!.Equals("playerSideA")) tempSideEnum = EPlayer.PlayerA;
            if (Model.PlayerSide!.Equals("playerSideB")) tempSideEnum = EPlayer.PlayerB;
            @if (Model.Brain != null && !Model.Brain.CheckPlayerPlacedShips(tempSideEnum))
            {
                <div class="p-3 bd-highlight row-cols-lg-auto">
                    <form method="get">
                        <div class="text-center">
                            <h5 class="display-10">Choose ship to use!</h5>
                        </div>
                        <div class="form-floating">
                            <select class="form-select" id="inputShipToUse" asp-for="ShipToUseInfo">
                                @foreach (ShipConfig shipConfig in Model.Brain.GetPlayerLeftShips(Model.PlayerSideCheck))
                                {
                                    <option value="@shipConfig.Name">@shipConfig.Name</option>
                                }
                            </select>
                            <label for="inputShipToUse" asp-for="ShipToUseInfo">Ships</label>
                        </div>
                        @if (Model.CheckIsShipActive())
                        {
                            <div class="d-flex justify-content-center">
                                <button type="submit" class="btn btn-primary disabled">Use ship</button>
                            </div>
                            <div id="passwordHelpBlock" class="form-text">
                                You have to place all selected ships to choose new!
                            </div>
                            if (Model.ShipToUseFromCookie != null)
                            {
                                <div class="text-center">
                                    <h8 class="display-12">Selected Ship</h8>
                                </div>
                                <div class="form-floating">
                                    <input class="form-control" id="textForActiveShip" name="textForActiveShip" placeholder="Name: @Model.ShipToUseFromCookie.FromLegacyCookieString()["shipName"]" value="Available: @Model.ShipToUseFromCookie.FromLegacyCookieString()["shipQuantity"]" disabled readonly/>
                                    <label for="textForActiveShip">Name: @Model.ShipToUseFromCookie.FromLegacyCookieString()["shipName"]</label>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="d-flex justify-content-center">
                                <button type="submit" class="btn btn-primary">Use ship</button>
                            </div>
                        }
                    </form>
                </div>
            }
        }
    </div>
</div>
<div class="d-flex justify-content-center">
    <div class="d-flex flex-row bd-highlight mb-3">
        <div class="p-2 bd-highlight">
            <a class="btn btn-primary" asp-area="" asp-page="/Index" role="button">Main menu</a>
        </div>
    </div>
</div>